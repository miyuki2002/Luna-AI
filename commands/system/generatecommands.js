const { SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');
const CommandsJSONService = require('../../services/CommandsJSONService');
const logger = require('../../utils/logger.js');
require('dotenv').config();

module.exports = {
  data: new SlashCommandBuilder()
    .setName('generatecommands')
    .setDescription('T·∫°o file JSON ch·ª©a th√¥ng tin t·∫•t c·∫£ l·ªánh c·ªßa bot (ch·ªâ d√†nh cho owner)')
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

  async execute(interaction) {
    const ownerId = process.env.OWNER_ID;
    if (interaction.user.id !== ownerId) {
      return interaction.reply({ 
        content: 'B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!', 
        ephemeral: true 
      });
    }

    await interaction.deferReply({ ephemeral: true });

    try {
      const success = await CommandsJSONService.generateCommandsJSON();
      
      if (success) {
        const fileInfo = await CommandsJSONService.getFileInfo();
        const commandsData = await CommandsJSONService.scanCommands();
        
        await interaction.editReply({
          content: `‚úÖ **ƒê√£ t·∫°o file JSON th√†nh c√¥ng!**\n\n` +
                   `üìÅ **Th√¥ng tin:**\n` +
                   `> File: \`assets/commands.json\`\n` +
                   `> S·ªë l·ªánh: **${commandsData.length}**\n` +
                   `> K√≠ch th∆∞·ªõc: **${fileInfo?.size || 0} bytes**\n` +
                   `> C·∫≠p nh·∫≠t: **${fileInfo?.modified?.toLocaleString('vi-VN') || 'N/A'}**\n\n` +
                   `üåê **S·ª≠ d·ª•ng:**\n` +
                   `> File n√†y c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng cho website\n` +
                   `> T·ª± ƒë·ªông c·∫≠p nh·∫≠t khi kh·ªüi ƒë·ªông bot\n` +
                   `> Format t∆∞∆°ng th√≠ch v·ªõi Mai bot`
        });
      } else {
        await interaction.editReply({
          content: '‚ùå **L·ªói khi t·∫°o file JSON!**\n\n' +
                   'Vui l√≤ng ki·ªÉm tra log ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.'
        });
      }

    } catch (error) {
      logger.error('COMMANDS_JSON', 'L·ªói khi t·∫°o file JSON l·ªánh:', error);
      await interaction.editReply({
        content: '‚ùå **L·ªói khi t·∫°o file JSON!**\n\n' +
                 `L·ªói: \`${error.message}\`\n` +
                 'Vui l√≤ng ki·ªÉm tra log ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.'
      });
    }
  },
};

