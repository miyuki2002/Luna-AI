# Changelog
All notable changes to Luna bot will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [1.0.0] - 2025-04-18
### Added
- Initial release of Luna Discord bot
- Integration with X.AI (Grok) for natural language processing
- Slash commands system with automatic deployment
- Profile system with modern card design
- Experience (XP) and achievement system
- MongoDB integration for data persistence
- Conversation memory and context management
- Image generation capabilities
- Server management features
- Chat-based programming assistance
- Custom font management system using Montserrat family

### Features
- Natural conversation through @mentions
- `/help` command for viewing available commands
- `/ping` command for checking bot latency
- `/about` command for bot information
- `/image` command for AI image generation
- `/reset` command for resetting conversations
- `/profile` command for viewing user stats
- Auto-deployment of commands for new servers
- User leveling and achievements
- Persistent conversation history
- Modern profile cards with customization
- Server-specific XP tracking

### Technical
- Modular architecture with handlers and services
- MongoDB for data storage and retrieval
- Canvas-based image generation for profiles and achievements
- Efficient command caching system
- Event-driven architecture
- Error handling and logging system
- Environment-based configuration
- Font management system for consistent typography

### Documentation
- Installation instructions in README
- Code documentation with JSDoc comments
- Project structure documentation
- Privacy policy and terms of service
- Command usage documentation

## [1.0.4] - 2025-01-18
### Changed
- **MAJOR REFACTORING**: Completely restructured NeuralNetworks.js architecture for better maintainability
- Separated monolithic 1664-line file into specialized service modules
- Improved code organization with clear separation of concerns
- Enhanced API migration readiness for future AI provider changes

### Added
- **AICore.js**: Centralized AI API interactions and core logic
  - All X.AI API calls and AI processing functions
  - Easy provider switching capability
  - Secure API client configuration
- **ImageService.js**: Dedicated image generation service
  - Gradio integration and image processing
  - Progress tracking for image generation
  - Isolated image-specific functionality
- **ConversationService.js**: Conversation flow management
  - Memory management and context processing
  - User interaction handling
  - Conversation enrichment with relevant memories
- **SystemService.js**: System utilities and health monitoring
  - Environment validation and system checks
  - Logging initialization and management
  - Graceful shutdown and periodic maintenance tasks
- Service-specific logging with prefixes (AI_CORE, IMAGE_SERVICE, CONVERSATION_SERVICE, SYSTEM_SERVICE)
- Comprehensive system health monitoring
- Enhanced error handling and debugging capabilities

### Technical Improvements
- **Backward Compatibility**: All existing code continues to work unchanged
- **Modular Architecture**: Each service has specific, well-defined responsibilities
- **Better Testing**: Independent service testing capability
- **Improved Maintainability**: Bug fixes isolated to relevant services
- **Enhanced Scalability**: Services can be scaled independently
- **API Migration Ready**: Only AICore.js needs changes for AI provider switches
- **System Management**: Environment validation, health monitoring, graceful shutdown
- **Code Quality**: Removed code duplication and improved organization

### Removed
- Monolithic NeuralNetworks.js structure (converted to lightweight orchestrator)
- Code comments and documentation blocks (cleaned up for production)

## [1.1.0] - 2025-10-19
### Added
- **Token Limit System**: Comprehensive token usage tracking and management
  - Role-based token limits (Owner: unlimited, Admin: 100k/day, Helper: 50k/day, User: 10k/day)
  - Automatic daily reset of token limits
  - Token usage tracking by day, week, month, and total
  - History of last 100 transactions per user
- **User Role System**: Four-tier role hierarchy
  - Owner: Full system access with unlimited tokens
  - Admin: User management and system statistics access
  - Helper: Enhanced token limits for support tasks
  - User: Default role with standard limits
- **TokenService.js**: New service for token and role management
  - User token data initialization and tracking
  - Role assignment and validation
  - Token usage recording and limit checking
  - System-wide statistics and reporting
- **Admin Commands**:
  - `/setrole`: Set user roles (Owner/Admin only)
  - `/tokenstats user`: View individual user token statistics
  - `/tokenstats system`: View system-wide token statistics (Owner/Admin only)
  - `/resettoken`: Reset token limits for users (Owner/Admin only)
- Token limit warnings with detailed information display
- MongoDB collection for user token data storage
- Comprehensive token usage logging and monitoring

### Changed
- Updated API configuration to use Perplexity AI
- Migrated from X.AI to Perplexity API for improved performance
- Enhanced AICore to track and return token usage from API responses
- Modified ConversationService to record token usage automatically
- Updated messageHandler to check token limits before processing requests
- Improved user profile structure with role field
- Simplified owner configuration to single OWNER_ID
- Removed all emoji icons from token system messages and embeds

### Technical
- Token data stored in MongoDB with automatic cleanup
- Automatic token limit reset after 24 hours
- Role-based access control for admin commands
- Token usage estimation for different request types
- Integration with existing profile and storage systems
- Secure role assignment with owner-only restrictions